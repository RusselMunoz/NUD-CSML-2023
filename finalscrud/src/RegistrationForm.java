package finalscrud;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

import static javax.swing.JOptionPane.showMessageDialog;

import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author russe
 */
public class ProductInformation extends javax.swing.JFrame {

    /**
     * Creates new form RegistrationForm
     */
    public ProductInformation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        productNameJTextField = new javax.swing.JTextField();
        priceJTextField = new javax.swing.JTextField();
        quantityJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        search = new javax.swing.JButton();
        productJText = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        add = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        n3w = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_name = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Haettenschweiler", 0, 36)); // NOI18N
        jLabel1.setText("Product Information");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Product Information"));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Product Name");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Price");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Quantity");

        productNameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productNameJTextFieldActionPerformed(evt);
            }
        });

        priceJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceJTextFieldActionPerformed(evt);
            }
        });

        quantityJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityJTextFieldActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Product ID");

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        productJText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productJTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(101, 101, 101)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(productNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(jLabel5)
                                .addGap(27, 27, 27))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(quantityJTextField)
                                .addGap(167, 167, 167)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(search, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                            .addComponent(productJText)))
                    .addComponent(priceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(productNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(productJText, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(priceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(quantityJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(add)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(update)
                .addGap(50, 50, 50)
                .addComponent(delete)
                .addGap(17, 17, 17))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add)
                    .addComponent(update)
                    .addComponent(delete))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        n3w.setText("New");
        n3w.setToolTipText("");

        table_name.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        table_name.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product ID", "Product Name", "Price", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(table_name);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(106, 106, 106)
                                .addComponent(n3w, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(23, 23, 23)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(n3w, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void priceJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void quantityJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
    }                                                  

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {                                       
        String ID;
        int notFound = 0;
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");

            String url = "jdbc:MySQL://localhost:3306/product_information";
            String user = "root";
            String pass = "";

            Connection con = DriverManager.getConnection(url, user, pass); 
            Statement st = con.createStatement();

            ID = productJText.getText();
            if ("".equals(ID)) {
                JOptionPane.showMessageDialog(new JFrame(), "ID is required!", "Dialog", JOptionPane.ERROR_MESSAGE);

            } else {
                String sql = "SELECT * FROM product WHERE product_id=" + ID;
                ResultSet rs = st.executeQuery(sql);
                while(rs.next()){
                    productNameJTextField.setText(rs.getString("product_name"));
                    priceJTextField.setText(rs.getString("price"));
                    quantityJTextField.setText(rs.getString("quantity"));
                    notFound = 1;
                }
                con.close();
                if(notFound == 0){
                    JOptionPane.showMessageDialog(new JFrame(), "Invalid ID", "Dialog", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch(Exception e) {
            System.out.println("Error " + e.getMessage());
        }
    }                                      

    private void addActionPerformed(java.awt.event.ActionEvent evt) {                                    
        String productName, price, quantity, query;
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
        
            String url = "jdbc:MySQL://localhost:3306/product_information";
            String user = "root";
            String pass = "";

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            if ("".equals(productNameJTextField.getText())){
                JOptionPane.showMessageDialog(new JFrame(), "Product name is required!", "Dialog", JOptionPane.ERROR_MESSAGE); 
            } else if ("".equals(priceJTextField.getText())){
                JOptionPane.showMessageDialog(new JFrame(), "Price is required!", "Dialog", JOptionPane.ERROR_MESSAGE);
            } else if ("".equals (quantityJTextField.getText())){
                JOptionPane.showMessageDialog(new JFrame(), "Quantity is required!", "Dialog", JOptionPane.ERROR_MESSAGE);
            } else {
                productName = productNameJTextField.getText();
                price = priceJTextField.getText();
                quantity = quantityJTextField.getText();

            query = "INSERT INTO product (product_name, price, quantity) "
                + "VALUES ('"+productName+"','"+price+"','"+quantity+"')";
            
            st.executeUpdate(query);
            
            productNameJTextField.setText("");
            priceJTextField.setText("");
            quantityJTextField.setText("");
            
            showMessageDialog(null, "Registered!");
            
            loadData();
            con.close();
            
            }
        } catch (Exception e) {
            System.out.println("Error "+ e.getMessage());
        }
    }                                   

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {                                       
        String ID;
        int notFound = 0;
        String productName, price, quantity;
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            
            String url = "jdbc:MySQL://localhost:3306/product_information";
            String user = "root"; 
            String pass = "";

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();
            
            ID = productJText.getText();
            if ("".equals(ID)){
                JOptionPane.showMessageDialog(new JFrame(), "ID is required!", "Dialog", JOptionPane.ERROR_MESSAGE);
                
            } else {
                String sql = "SELECT * FROM product WHERE product_id=" + ID;
                ResultSet rs = st.executeQuery (sql);
                while(rs.next()){
                    notFound = 1;
                    
                    productName = productNameJTextField.getText();
                    price = priceJTextField.getText();
                    quantity = quantityJTextField.getText();
            
                    String sq12 = "UPDATE product SET product_name ='" + productName + "', price='" + price + "', quantity='" + quantity + "' WHERE product_id=" + ID;
                    st.executeUpdate(sq12);
                    loadData();
                    con.close();
                }
                if (notFound == 0) {
                    JOptionPane.showMessageDialog(new JFrame(), "Invalid ID", "Dialog", JOptionPane.ERROR_MESSAGE);
                } 
            }
        }
        catch (Exception e) {
            System.out.println("Error " + e.getMessage());
        }
    }                                      

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {                                       
        String ID;
        int notFound = 0;
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            
            String url = "jdbc:MySQL://localhost:3306/product_information"; 
            String user = "root";
            String pass = "";
                    
            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();
            
            ID = productJText.getText();
            if ("".equals(ID)){
                JOptionPane.showMessageDialog(new JFrame(), "ID is required!", "Dialog", JOptionPane.ERROR_MESSAGE);
            } else {
                String sql = "SELECT * From product WHERE product_id=" + ID;
                ResultSet rs = st.executeQuery(sql);
                while(rs.next()){
                    notFound = 1;
                    String sql2 = "DELETE FROM product WHERE product_id=" + ID;
                    st.executeUpdate(sql2);
                    loadData();
                    con.close();
                }
                if(notFound == 0){
                    JOptionPane.showMessageDialog(new JFrame(), "Invalid ID", "Dialog", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception e) {
            System.out.println("Error " + e.getMessage());
        }
    }                                      

    private void productNameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        // TODO add your handling code here:
    }                                                     

    private void productJTextActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            
    public void loadData(){
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            
            String url = "jdbc:MySQL://localhost:3306/product_information";
            String user = "root";
            String pass = "";
        
            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();
        
            DefaultTableModel model = new DefaultTableModel (new String[]{"Product ID", "Product Name", "Price", "Quantity"}, 0);
            table_name.setModel(model);
        
            String sql = "SELECT * FROM product";
            ResultSet rs = st.executeQuery(sql);
            
            String i, n, p, q;
        
            while (rs.next()) {
                i = rs.getString("product_id");
                n = rs.getString("product_name");
                p = rs.getString("price");
                q = rs.getString("quantity");

                model.addRow(new Object[]{i, n, p, q});
            }
        } catch (Exception e) {
            System.out.println("Error" + e.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            ProductInformation x = new ProductInformation();
            
            x.loadData();
            x.setLocationRelativeTo(null);
            x.setVisible(true);
            
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton add;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton n3w;
    private javax.swing.JTextField priceJTextField;
    private javax.swing.JTextField productJText;
    private javax.swing.JTextField productNameJTextField;
    private javax.swing.JTextField quantityJTextField;
    private javax.swing.JButton search;
    private javax.swing.JTable table_name;
    private javax.swing.JButton update;
    // End of variables declaration                   
}
